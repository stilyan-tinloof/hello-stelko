name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm run build

      - name: Create release pull request or publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run version
          publish: pnpm exec changeset publish
          commit: '[ci] release'
          title: '[ci] release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/github-script@v7
        if: steps.changesets.outputs.published == 'true'
        name: Parse changeset `publishedPackages` output
        id: publishedPackages
        with:
          script: |
            const changes = ${{ steps.changesets.outputs.publishedPackages  }};

            let blocks = [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "ðŸš€ New release!",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": `A new release of *<https://github.com/${{ github.repository }}|${{ github.repository }}>* is here! ðŸŽ‰`
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "ðŸ”¹ *What's new?*"
                }
              }
            ];

            if (Array.isArray(changes) && changes.length > 0) {
              changes.forEach((pkg) => {
                blocks.push({
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": `ðŸ“¦ *Package:* \`${pkg.name}\`\nðŸ”– *Version:* \`${pkg.version}\``
                  }
                });
              });
            }

            blocks.push(
              { "type": "divider" },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": `ðŸ“œ *<https://github.com/${{ github.repository }}/releases|View Full Changelog>*`
                }
              }
            );

            const payload = {
              text: "New package release",
              blocks: blocks
            };

            core.setOutput("blocks", JSON.stringify(payload));
      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        id: slack
        uses: slackapi/slack-github-action@v2
        with:
          webhook-type: incoming-webhook
          payload: |
            ${{steps.publishedPackages.outputs.blocks}}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
